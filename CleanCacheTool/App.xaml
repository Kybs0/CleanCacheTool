<Application x:Class="CleanCacheTool.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:CleanCacheTool"
             StartupUri="MainWindow.xaml">
    <Application.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="Resources/Style.CheckBox.xaml"/>
                <ResourceDictionary Source="Resources/Shared.xaml"></ResourceDictionary>
            </ResourceDictionary.MergedDictionaries>
            <StreamGeometry x:Key="Window.Minimize">M0,6 V8 H10 V6 Z</StreamGeometry>
            <StreamGeometry x:Key="Window.Close">M3,8L3,9 2,9 2,10 0,10 0,8 1,8 1,7 2,7 2,6 3,6 3,4 2,4 2,3 1,3 1,2 0,2 0,0 2,0 2,1 3,1 3,2 4,2 4,3 6,3 6,2 7,2 7,1 8,1 8,0 10,0 10,2 9,2 9,3 8,3 8,4 7,4 7,6 8,6 8,7 9,7 9,8 10,8 10,10 8,10 8,9 7,9 7,8 6,8 6,7 4,7 4,8 3,8z</StreamGeometry>

            <ControlTemplate x:Key="Button.Tempate" TargetType="Button">
                <Grid x:Name="RootGrid" Background="Transparent">
                    <Border x:Name="CoverBorder" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}"/>
                    <Path x:Name="IconPath" Fill="#808080" Margin="{TemplateBinding Padding}" VerticalAlignment="Center" HorizontalAlignment="Center"
                      Data="{Binding Path=(local:ControlsHelper.Geometry),RelativeSource={RelativeSource TemplatedParent}}"/>
                </Grid>
                <ControlTemplate.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter TargetName="CoverBorder" Property="Background" 
                            Value="{Binding Path=(local:ControlsHelper.BackgroundHover), RelativeSource={RelativeSource TemplatedParent}}"/>
                        <Setter TargetName="IconPath" Property="Fill" 
                            Value="{Binding Path=(local:ControlsHelper.ForegroundHover), RelativeSource={RelativeSource TemplatedParent}}"/>
                    </Trigger>
                    <Trigger Property="IsPressed" Value="True">
                        <Setter TargetName="CoverBorder" Property="Background" 
                            Value="{Binding Path=(local:ControlsHelper.BackgroundPressed), RelativeSource={RelativeSource TemplatedParent}}"/>
                        <Setter TargetName="IconPath" Property="Fill" 
                            Value="{Binding Path=(local:ControlsHelper.ForegroundPressed), RelativeSource={RelativeSource TemplatedParent}}"/>
                    </Trigger>
                    <Trigger Property="IsEnabled" Value="False">
                        <Setter TargetName="IconPath" Property="Opacity" Value="0.4"/>
                    </Trigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>

            <Style x:Key="Style.Button.Base" TargetType="Button">
                <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                <Setter Property="Width" Value="36" />
                <Setter Property="Height" Value="30" />
                <Setter Property="Padding" Value="5 2" />
                <Setter Property="Template" Value="{StaticResource Button.Tempate}"/>
            </Style>

            <ControlTemplate x:Key="SearchButtonTemplate" TargetType="Button">
                <Border x:Name="RootBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"
                    Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}">
                    <StackPanel VerticalAlignment="Center" Orientation="Horizontal">
                        <Image Stretch="Fill" SnapsToDevicePixels="True" UseLayoutRounding="True" Width="16" Height="16"
                           VerticalAlignment="Center" Source="../Images/search.png"/>
                        <TextBlock Text="{TemplateBinding Content}" Margin="4 0 0 0"/>
                    </StackPanel>
                </Border>
                <ControlTemplate.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter TargetName="RootBorder" Property="Background" Value="#FFE6E4E4"/>
                    </Trigger>
                    <Trigger Property="IsPressed" Value="True">
                        <Setter TargetName="RootBorder" Property="Background" Value="LightGray"/>
                    </Trigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>

            <Style TargetType="{x:Type ComboBoxItem}">
                <Setter Property="SnapsToDevicePixels"
                    Value="true" />
                <Setter Property="OverridesDefaultStyle"
                    Value="true" />
                <Setter Property="FontSize" Value="12"></Setter>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                            <Border x:Name="Border" Padding="2" SnapsToDevicePixels="true" Background="Transparent" Height="24">
                                <ContentPresenter Margin="7 0 0 0" HorizontalAlignment="Left" VerticalAlignment="Center"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="Border" Property="Background" Value="#FFD7F0D3"></Setter>
                                </Trigger>
                                <Trigger Property="IsSelected" Value="True">
                                    <Setter TargetName="Border" Property="Background" Value="#C9E6C3"></Setter>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Pen x:Key="Pen.Triangle" Thickness="1" Brush="#666666" />
            <StreamGeometry x:Key="Geometry.TriangleDown">M0,0 H5 M1,1 H4 M2,2 H3</StreamGeometry>
            <DrawingImage x:Key="Image.TriangleDown">
                <DrawingImage.Drawing>
                    <GeometryDrawing Pen="{StaticResource Pen.Triangle}" Geometry="{StaticResource Geometry.TriangleDown}"/>
                </DrawingImage.Drawing>
            </DrawingImage>
            <Style x:Key="Style.ToggleButton" TargetType="ToggleButton">
                <Setter Property="OverridesDefaultStyle" Value="True" />
                <Setter Property="FontSize" Value="12" />
                <Setter Property="Background" Value="White" />
                <Setter Property="BorderThickness" Value="1" />
                <Setter Property="HorizontalContentAlignment" Value="Center" />
                <Setter Property="VerticalContentAlignment" Value="Center" />
                <Setter Property="SnapsToDevicePixels" Value="True" />
                <Setter Property="UseLayoutRounding" Value="True" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ButtonBase}">
                            <Grid Width="{TemplateBinding Width}" Height="{TemplateBinding Height}">
                                <Border x:Name="RootBorder" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}"
                                    Background="{TemplateBinding Background}"
                                    CornerRadius="2"
                                    SnapsToDevicePixels="True">
                                    <ContentPresenter ContentSource="{TemplateBinding Content}" Margin="{TemplateBinding Padding}"
                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                                </Border>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter TargetName="RootBorder" Property="Opacity" Value="0.5" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="#F4F4F4" />
                    </Trigger>
                    <Trigger Property="IsChecked" Value="True">
                        <Setter Property="Background" Value="#E4E4E4" />
                        <Setter Property="BorderBrush" Value="#F4F4F4" />
                    </Trigger>
                </Style.Triggers>
            </Style>
            <Style x:Key="Style.ComboBox" TargetType="{x:Type ComboBox}">
                <Setter Property="SnapsToDevicePixels" Value="True" />
                <Setter Property="OverridesDefaultStyle" Value="True" />
                <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                <Setter Property="Height" Value="28" />
                <Setter Property="FontSize" Value="12" />
                <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
                <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
                <Setter Property="ScrollViewer.CanContentScroll" Value="True" />
                <Setter Property="IsEditable" Value="False" />
                <Setter Property="IsReadOnly" Value="True" />
                <Setter Property="BorderThickness" Value="0" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ComboBox">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>

                                <!--单击打开下拉弹出框的ToggleButton-->
                                <ToggleButton Grid.Column="0" Grid.ColumnSpan="2" Name="ToggleButton" BorderThickness="{TemplateBinding BorderThickness}"
                                      Style="{DynamicResource Style.ToggleButton}" Focusable="False" ClickMode="Press" Background="{TemplateBinding Background}"
                                      Height="{TemplateBinding Height}" HorizontalAlignment="Stretch" HorizontalContentAlignment="Stretch"
                                      IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}">
                                    <ToggleButton.Content>
                                        <Grid Grid.Column="0" Grid.ColumnSpan="2">
                                            <TextBlock x:Name="HintTextBlock"
                                               Foreground="{DynamicResource Brush.Text.Faint}" HorizontalAlignment="Left" Margin="11 0 0 0"
                                               Visibility="Collapsed" FontSize="{TemplateBinding FontSize}" />
                                            <Image Source="{DynamicResource Image.TriangleDown}" Stretch="None" VerticalAlignment="Center"
                                           HorizontalAlignment="Right" Margin="0 0 10 0" />
                                        </Grid>
                                    </ToggleButton.Content>
                                </ToggleButton>

                                <!--选定内容显示区-->
                                <ContentPresenter Grid.Column="0" Name="ContentSite" IsHitTestVisible="False"
                                          Content="{TemplateBinding SelectionBoxItem}" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                          Margin="11 0 0 0" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                          VerticalAlignment="Center" HorizontalAlignment="Left" />

                                <!--下拉弹出框-->
                                <Popup Grid.Column="0" Grid.ColumnSpan="2" Name="Popup" IsOpen="{TemplateBinding IsDropDownOpen}"
                               AllowsTransparency="True" Focusable="False" PopupAnimation="Slide" VerticalOffset="2">
                                    <Border x:Name="PopupBorder" Background="White" BorderThickness="1"
                                    BorderBrush="#F4F4F4" MinWidth="{TemplateBinding ActualWidth}"
                                    MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                        <ScrollViewer SnapsToDevicePixels="True" Margin="0 -1">
                                            <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained"/>
                                        </ScrollViewer>
                                    </Border>
                                </Popup>

                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="SelectedValue" Value="{x:Null}">
                                    <Setter TargetName="HintTextBlock" Property="Visibility" Value="Visible" />
                                </Trigger>
                                <Trigger Property="SelectedValue" Value="">
                                    <Setter TargetName="HintTextBlock" Property="Visibility" Value="Visible" />
                                </Trigger>
                                <Trigger Property="HasItems" Value="False">
                                    <Setter TargetName="PopupBorder" Property="MinHeight" Value="100" />
                                </Trigger>
                                <Trigger Property="IsGrouping" Value="True">
                                    <Setter Property="ScrollViewer.CanContentScroll" Value="False" />
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Opacity" Value="0.3"/>
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="ToggleButton" Property="Background" Value="#E4E4E4"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>


            <Style x:Key="ScrollBarPageButton" TargetType="{x:Type RepeatButton}">
                <Setter Property="SnapsToDevicePixels" Value="True" />
                <Setter Property="OverridesDefaultStyle" Value="true" />
                <Setter Property="IsTabStop" Value="false" />
                <Setter Property="Focusable" Value="false" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type RepeatButton}">
                            <Border Background="Transparent" />
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="ScrollBarThumb" TargetType="{x:Type Thumb}">
                <Setter Property="SnapsToDevicePixels" Value="True" />
                <Setter Property="OverridesDefaultStyle" Value="true" />
                <Setter Property="IsTabStop" Value="false" />
                <Setter Property="Focusable" Value="false" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Thumb}">
                            <Border CornerRadius="2" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1" />
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <ControlTemplate x:Key="VerticalScrollBar" TargetType="{x:Type ScrollBar}">
                <Grid>
                    <Border CornerRadius="2" Width="0.5"/>
                    <Track x:Name="PART_Track" IsDirectionReversed="true">
                        <Track.DecreaseRepeatButton>
                            <RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="ScrollBar.PageUpCommand" />
                        </Track.DecreaseRepeatButton>
                        <Track.Thumb>
                            <Thumb Style="{StaticResource ScrollBarThumb}" Margin="4,0,4,0" Background="#CDCFD3"></Thumb>
                        </Track.Thumb>
                        <Track.IncreaseRepeatButton>
                            <RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="ScrollBar.PageDownCommand" />
                        </Track.IncreaseRepeatButton>
                    </Track>
                </Grid>
            </ControlTemplate>

            <Style TargetType="ScrollViewer">
                <Setter Property="VerticalScrollBarVisibility" Value="Auto"/>
                <Setter Property="HorizontalScrollBarVisibility" Value="Disabled"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ScrollViewer}">
                            <Grid x:Name="Grid" Background="{TemplateBinding Background}">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="*"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>
                                <Rectangle x:Name="Corner" Grid.Column="1" Fill="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" Grid.Row="1"/>
                                <ScrollContentPresenter x:Name="PART_ScrollContentPresenter" CanContentScroll="{TemplateBinding CanContentScroll}" CanHorizontallyScroll="False" CanVerticallyScroll="False" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Grid.Column="0" Margin="{TemplateBinding Padding}" Grid.Row="0"/>
                                <ScrollBar x:Name="PART_VerticalScrollBar" AutomationProperties.AutomationId="VerticalScrollBar" Cursor="Arrow" Grid.Column="1" 
                            Maximum="{TemplateBinding ScrollableHeight}" Minimum="0" Grid.Row="0" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" 
                            Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportHeight}" 
                            Template="{StaticResource VerticalScrollBar}"/>
                                <ScrollBar x:Name="PART_HorizontalScrollBar" AutomationProperties.AutomationId="HorizontalScrollBar" Cursor="Arrow" Grid.Column="0" Maximum="{TemplateBinding ScrollableWidth}" Minimum="0" Orientation="Horizontal" Grid.Row="1" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportWidth}"/>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="Style.ListBox" TargetType="ListBox">
                <Setter Property="BorderBrush" Value="#AAD3D3D3"/>
                <Setter Property="SnapsToDevicePixels" Value="true" />
                <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled" />
                <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
                <Setter Property="ScrollViewer.CanContentScroll" Value="true" />
                <Setter Property="VerticalContentAlignment" Value="Center" />
            </Style>
            <Style x:Key="Style.LinkedButton" TargetType="Button">
                <Setter Property="VerticalContentAlignment" Value="Center" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Grid>
                                <Border x:Name="ButtonBorder" BorderBrush="Transparent" BorderThickness="0 0 0 1" VerticalAlignment="Bottom"/>
                                <TextBlock x:Name="ContentTextBlock" Text="{TemplateBinding Content}" Foreground="CornflowerBlue"
                                       VerticalAlignment="{TemplateBinding VerticalContentAlignment}" TextTrimming="CharacterEllipsis"/>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="ButtonBorder" Property="BorderBrush" Value="CornflowerBlue"/>
                                    <Setter TargetName="ContentTextBlock" Property="Foreground" Value="CornflowerBlue"/>
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter TargetName="ContentTextBlock" Property="Foreground" Value="DodgerBlue"/>
                                    <Setter TargetName="ButtonBorder" Property="BorderBrush" Value="DodgerBlue"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style TargetType="TextBlock">
                <Setter Property="Foreground" Value="#464646"/>
            </Style>

            <DrawingImage x:Key="Image.Refresh.Dark">
                <DrawingImage.Drawing>
                    <GeometryDrawing Brush="#FF1296DB">
                        <GeometryDrawing.Geometry>
                            <PathGeometry FillRule="Nonzero" Figures="M512,101.498886108398C595.622131347656,101.498878479004,671.643859863281,124.299949645996,740.05615234375,169.911178588867L770.466674804688,124.299957275391C785.667419433594,101.489776611328,816.077941894531,109.099235534668,823.678283691406,131.900299072266L876.889892578125,299.14453125C876.889892578125,314.345245361328,861.680053710938,337.155426025391,846.479370117188,337.155426025391L671.634765625,329.555053710938C648.833679199219,329.555053710938,633.623901367188,299.14453125,648.833679199219,283.934722900391L686.844604492188,238.323486328125 686.844604492188,230.723129272461C641.233337402344,192.712249755859 572.811950683594,177.511535644531 512,177.511535644531 329.555053710938,177.511535644531 177.511535644531,329.555053710938 177.511535644531,512 177.511535644531,694.444946289063 329.555053710938,846.488464355469 512,846.488464355469 694.444946289063,846.488464355469 846.488464355469,694.444946289063 846.488464355469,512 846.488464355469,489.198944091797 861.689147949219,473.989105224609 884.490234375,473.989105224609 907.300415039063,473.989105224609 922.501098632813,489.198944091797 922.501098632813,512 922.501098632813,740.05615234375 740.065307617188,922.510192871094 512,922.510192871094 283.943817138672,922.510192871094 101.489776611328,740.05615234375 101.489776611328,512 101.489776611328,283.943817138672 283.943817138672,101.498878479004 512,101.498886108398z" />
                        </GeometryDrawing.Geometry>
                    </GeometryDrawing>
                </DrawingImage.Drawing>
            </DrawingImage>
            <DrawingImage x:Key="Image.Refresh.Light">
                <DrawingImage.Drawing>
                    <GeometryDrawing Brush="#A11296DB">
                        <GeometryDrawing.Geometry>
                            <PathGeometry FillRule="Nonzero" Figures="M512,101.498886108398C595.622131347656,101.498878479004,671.643859863281,124.299949645996,740.05615234375,169.911178588867L770.466674804688,124.299957275391C785.667419433594,101.489776611328,816.077941894531,109.099235534668,823.678283691406,131.900299072266L876.889892578125,299.14453125C876.889892578125,314.345245361328,861.680053710938,337.155426025391,846.479370117188,337.155426025391L671.634765625,329.555053710938C648.833679199219,329.555053710938,633.623901367188,299.14453125,648.833679199219,283.934722900391L686.844604492188,238.323486328125 686.844604492188,230.723129272461C641.233337402344,192.712249755859 572.811950683594,177.511535644531 512,177.511535644531 329.555053710938,177.511535644531 177.511535644531,329.555053710938 177.511535644531,512 177.511535644531,694.444946289063 329.555053710938,846.488464355469 512,846.488464355469 694.444946289063,846.488464355469 846.488464355469,694.444946289063 846.488464355469,512 846.488464355469,489.198944091797 861.689147949219,473.989105224609 884.490234375,473.989105224609 907.300415039063,473.989105224609 922.501098632813,489.198944091797 922.501098632813,512 922.501098632813,740.05615234375 740.065307617188,922.510192871094 512,922.510192871094 283.943817138672,922.510192871094 101.489776611328,740.05615234375 101.489776611328,512 101.489776611328,283.943817138672 283.943817138672,101.498878479004 512,101.498886108398z" />
                        </GeometryDrawing.Geometry>
                    </GeometryDrawing>
                </DrawingImage.Drawing>
            </DrawingImage>
            <Style x:Key="Style.RefreshButton" TargetType="Button">
                <Setter Property="Width" Value="16"></Setter>
                <Setter Property="Height" Value="16"></Setter>
                <Setter Property="ToolTip" Value="刷新"></Setter>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Grid Height="{TemplateBinding Height}" Width="{TemplateBinding Width}">
                                <Image x:Name="ContentImage" Stretch="Uniform" Source="{StaticResource Image.Refresh.Light}"
                                   VerticalAlignment="Center"/>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="ContentImage" Property="Source" Value="{StaticResource Image.Refresh.Dark}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </ResourceDictionary>
    </Application.Resources>
</Application>
