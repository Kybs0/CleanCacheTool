<UserControl x:Class="CleanCacheTool.Views.CleanCacheListView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:CleanCacheTool"
             xmlns:controls="clr-namespace:CleanCacheTool.Controls"
             xmlns:views="clr-namespace:CleanCacheTool.Views"
             xmlns:converters="clr-namespace:CleanCacheTool.Views.Converters"
             xmlns:models="clr-namespace:CleanCacheTool.Views.Models"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800" x:Name="TheCleanCacheListView" DataContext="{x:Static models:CleanCacheVeiwModel.Instance}">
    <UserControl.Resources>
        <converters:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter"/>
        <converters:BoolToVisibilityConverter x:Key="BoolToVisibilityReverseConverter" IsReverse="True"/>
        <Style TargetType="GridViewColumnHeader">
            <Setter Property="FocusVisualStyle" Value="{x:Null}"></Setter>
            <Setter Property="BorderThickness" Value="0"></Setter>
            <Setter Property="Foreground" Value="{StaticResource Color.Text.Normal}"></Setter>
            <Setter Property="HorizontalContentAlignment" Value="Left"></Setter>
            <Setter Property="Margin" Value="4 0 0 0"></Setter>
        </Style>
        <Style TargetType="ListView">
            <Setter Property="BorderBrush" Value="LightGray"/>
            <Setter Property="SnapsToDevicePixels" Value="true" />
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
            <Setter Property="ScrollViewer.CanContentScroll" Value="true" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ListView">
                        <Border Name="Border" BorderThickness="1" BorderBrush="{TemplateBinding BorderBrush}">
                            <ScrollViewer Style="{DynamicResource {x:Static GridView.GridViewScrollViewerStyleKey}}">
                                <ItemsPresenter />
                            </ScrollViewer>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter TargetName="Border" Property="Background" Value="#FFAAAAAA"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="BorderBrush" Value="LightGray"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="Style.ListBox" TargetType="ListBox">
            <Setter Property="BorderBrush" Value="#AAD3D3D3"/>
            <Setter Property="SnapsToDevicePixels" Value="true" />
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled" />
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
            <Setter Property="ScrollViewer.CanContentScroll" Value="true" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
        </Style>
        <DataTemplate x:Key="CleaningFile.ItemTemplate"  DataType="views:CleaningModuleItem">
            <Grid x:Name="RootGrid" Background="Transparent" Height="42" VerticalAlignment="Center">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="26"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="40"/>
                </Grid.ColumnDefinitions>
                <Button x:Name="ModuleFolderNameButton" Grid.Column="1" Content="{Binding Path=ModuleFolder}" VerticalAlignment="Center" HorizontalAlignment="Left"
                        Style="{StaticResource Style.LinkedButton}" Click="ModuleFolderNameLinkedButton_OnClick" 
                        Cursor="Hand" FontSize="14" Margin="0 0 20 0"/>
                <Grid x:Name="DocSizeGrid" Grid.Column="1" HorizontalAlignment="Right" Margin="0 0 -30 0">
                    <TextBlock x:Name="DocSizeText" Text="{Binding Path=DisplaySize}" FontSize="12"
                                   HorizontalAlignment="Right" VerticalAlignment="Center"
                                   Foreground="{StaticResource Brush.Text.Faint}" />
                </Grid>
            </Grid>
        </DataTemplate>

        <Style x:Key="CleaningFile.ListBoxItemStyle" TargetType="ListBoxItem">
            <EventSetter Event="PreviewMouseLeftButtonDown" Handler="OnListBoxItemPreviewMouseLeftButtonDown" HandledEventsToo="True" />
            <EventSetter Event="PreviewMouseLeftButtonUp" Handler="OnListBoxItemPreviewMouseLeftButtonUp" HandledEventsToo="True" />
            <EventSetter Event="PreviewMouseRightButtonDown" Handler="OnListBoxItemPreviewMouseRightButtonDown" HandledEventsToo="True" />
            <EventSetter Event="KeyDown" Handler="OnListBoxItemKeyDown" HandledEventsToo="True" />
            <EventSetter Event="KeyUp" Handler="OnListBoxItemKeyUp" HandledEventsToo="True" />
            <Setter Property="AllowDrop" Value="True" />
            <Setter Property="FocusVisualStyle" Value="{x:Null}" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ListBoxItem">
                        <Grid>
                            <Border x:Name="RootBorder">
                                <Border.Resources>
                                    <Storyboard x:Key="ItemRemovedStoryboard">
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="RootBorder"
                                                                               Storyboard.TargetProperty="Height">
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="42" />
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.6" Value="0">
                                                <EasingDoubleKeyFrame.EasingFunction>
                                                    <CubicEase EasingMode="EaseOut" />
                                                </EasingDoubleKeyFrame.EasingFunction>
                                            </EasingDoubleKeyFrame>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="RootBorder" Storyboard.TargetProperty="Opacity">
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                    <Storyboard x:Key="ItemAddStoryboard">
                                        <ThicknessAnimationUsingKeyFrames Storyboard.TargetName="RootBorder"
                                                                                  BeginTime="00:00:00"
                                                                                  Storyboard.TargetProperty="Margin">
                                            <SplineThicknessKeyFrame KeyTime="00:00:0.0" Value="0, 0,0,0" />
                                            <SplineThicknessKeyFrame KeyTime="00:00:0.3" Value="0, 42,0,0" />
                                        </ThicknessAnimationUsingKeyFrames>
                                    </Storyboard>
                                </Border.Resources>
                                <Grid x:Name="ContentGrid">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="Auto" />
                                    </Grid.RowDefinitions>
                                    <Grid Margin="16,0">
                                        <CheckBox x:Name="DocCheckBox"
                                                          IsChecked="{Binding RelativeSource={RelativeSource TemplatedParent},Path=IsSelected,Mode=TwoWay}"
                                                          Style="{StaticResource Style.DefaultCheckBox}"
                                                          Visibility="Visible"
                                                          VerticalAlignment="Center" Margin="0 0 6 0" />
                                        <Grid VerticalAlignment="Center">
                                            <FrameworkElement.RenderTransform>
                                                <TransformGroup>
                                                    <ScaleTransform />
                                                    <SkewTransform />
                                                    <RotateTransform />
                                                    <TranslateTransform x:Name="DocNamePanelTranslateTransform" />
                                                </TransformGroup>
                                            </FrameworkElement.RenderTransform>
                                            <ContentPresenter ContentSource="{TemplateBinding Content}" />
                                        </Grid>
                                    </Grid>
                                    <Border Grid.Row="0" x:Name="LineBorder" Margin="18,0"
                                                    BorderThickness="0 0 0 1" BorderBrush="#EEEEEE"
                                                    VerticalAlignment="Bottom" />
                                </Grid>
                            </Border>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="RootBorder" Property="Background" Value="#FAFAFA" />
                            </Trigger>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter TargetName="RootBorder" Property="Background" Value="#E8FAE6" />

                                <!--选中状态时，隐藏上下分隔线-->
                                <Setter TargetName="LineBorder" Property="Visibility" Value="Collapsed" />
                                <Setter TargetName="RootBorder" Property="Height" Value="43" />
                                <Setter TargetName="RootBorder" Property="Margin" Value="0 -1 0 0" />
                                <Setter TargetName="ContentGrid" Property="Margin" Value="0 1 0 0" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </UserControl.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <Grid Grid.Row="0" Margin="16,0" Height="80">
            <StackPanel x:Name="CacheOperationPanel" VerticalAlignment="Center" HorizontalAlignment="Left">
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Left">
                    <Button x:Name="RefreshButton" Content="重新扫描" MinWidth="80" Command="{Binding RefreshCommand}" Background="Transparent" 
                            BorderBrush="LightGray" Padding="20 6"/>
                    <Button x:Name="CleanButton" Content="点击清理" Margin="30 0 0 0" MinWidth="80" Command="{Binding CleanCacheCommand}" 
                            Background="Transparent" BorderBrush="LightGray" Padding="20 6"/>
                </StackPanel>
            </StackPanel>
            <Button x:Name="SettingButton" Content="配置文件" HorizontalAlignment="Right" VerticalAlignment="Center"
                    Style="{StaticResource Style.LinkedButton}" Click="Hyperlink_OnClick" 
                    Cursor="Hand" FontSize="12" Margin="0 0 10 0"/>
        </Grid>
        <Grid Grid.Row="1">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <Grid x:Name="HeaderListGrid" Margin="16,0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="26"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="40"/>
                </Grid.ColumnDefinitions>
                <CheckBox Grid.Column="0" Name="AllSelectCheckBox" Click="AllSelectCheckBox_OnClick"
                          Style="{StaticResource Style.DefaultCheckBox}" VerticalAlignment="Center" Margin="0 -1 0 0"
                          IsChecked="{Binding ElementName=TheCleanCacheListView,Path=AllSelected,Mode=OneWay}">
                </CheckBox>
                <TextBlock Grid.Column="1" Text="文件夹路径" FontWeight="Bold" Margin="2 0 0 0" FontSize="14"/>
                <TextBlock Grid.Column="2" Text="大小" FontWeight="Bold" Margin="2 0 0 0" FontSize="14"/>
            </Grid>
            <controls:VirtualizedListBox Grid.Row="1" x:Name="CleanUpListBox" 
                     Background="Transparent" BorderThickness="0 1 0 0"
                     Style="{StaticResource Style.ListBox}"
                     ItemTemplate="{StaticResource CleaningFile.ItemTemplate}"
                     ItemContainerStyle="{StaticResource CleaningFile.ListBoxItemStyle}"
                     ScrollViewer.CanContentScroll="True"
                     VirtualizingPanel.IsVirtualizing="True" VirtualizingPanel.ScrollUnit="Pixel"
                     DocListState="{Binding DocListState}"
                     ItemsSource="{Binding ItemsSource,Mode=TwoWay}"
                     SelectedItem="{Binding SelectedItem,Mode=TwoWay}"
                     SelectedCoursewares="{Binding SelectedItems,Mode=TwoWay}"
                     SelectionChanged="ListBox_OnSelectionChanged"/>
            <controls:CircleLoading  Grid.Row="1"
                                     IsActive="True"
                                     LoadingSize="Size32" Height="32" Width="32"
                                     Visibility="{Binding ElementName=TheCleanCacheListView,Path=DataContext.IsRefreshing,Converter={StaticResource BoolToVisibilityConverter}}"/>
            <CheckBox x:Name="LogCheckBox" Grid.Row="2" Content="日志" IsChecked="False" Visibility="Collapsed"/>
            <StackPanel Grid.Row="3" Visibility="{Binding ElementName=LogCheckBox,Path=IsChecked,Converter={StaticResource BoolToVisibilityConverter}}">
                <GroupBox x:Name="OutputGroupBox" Header="输出日志" Height="100">
                    <TextBox x:Name="OutputTextBox" Text="{Binding OutputText}" TextWrapping="Wrap" IsEnabled="True"
                                 ScrollViewer.CanContentScroll="True" ScrollViewer.VerticalScrollBarVisibility="Auto"
                                 VirtualizingPanel.IsVirtualizing="True" VirtualizingPanel.ScrollUnit="Item"
                                 TextChanged="TextBox_OnTextChanged"></TextBox>
                </GroupBox>
                <GroupBox x:Name="ErrorGroupBox" Height="100">
                    <GroupBox.Header>
                        <TextBlock Text="{Binding ErrorListCount,StringFormat=错误列表({0})}"></TextBlock>
                    </GroupBox.Header>
                    <TextBox x:Name="ErrorTextBox" Text="{Binding ErrorText}" TextWrapping="Wrap" IsEnabled="True"
                                 ScrollViewer.CanContentScroll="True" ScrollViewer.VerticalScrollBarVisibility="Auto"
                                 VirtualizingPanel.IsVirtualizing="True" VirtualizingPanel.ScrollUnit="Item"
                                 TextChanged="TextBox_OnTextChanged"></TextBox>
                </GroupBox>
            </StackPanel>
        </Grid>

        <Grid Grid.Row="0" Grid.RowSpan="2" x:Name="LoadingGrid" Background="White" 
              Visibility="{Binding IsCleaningCache,Converter={StaticResource BoolToVisibilityConverter}}">
            <local:LongBarLoadingControl x:Name="LoadingControl" VerticalAlignment="Center"
                                         LoadingTips="垃圾清理中"
                                         LoadingTipsDetail="{Binding CurrentOperationDetail}" IsLoadingTipsDetailSmall="True"
                                         ProgressValue="{Binding CleanCacheProgress}"
                                         ProgressValueDetail="{Binding CleanCacheProgressDetail}"
                                         LoadedTips="清理完成"/>
        </Grid>
    </Grid>
</UserControl>
